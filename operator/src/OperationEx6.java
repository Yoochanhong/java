public class OperationEx6 {
    public static void main(String[] args) {
        int num1 = 5; // 2진수 0101
        int num2 = 10;// 2진수 1010
        int result1 = num1 & num2; //각 자릿수마다 둘다 1이 있으면 1, 아니면 0
        System.out.println(result1); // 1이 겹치는 부분이 없어서 0 출력

        int result2 = num1 | num2; //각 자릿수마다 하나라도 1이 있으면 1, 둘다 0이면 0
        System.out.println(result2); // 자릿수마다 1이 있어서 2진수 1111인 15 출력

        int result3 = num1 ^ num2; //각 자릿수마다 같은 값이 있으면 0, 아니면 1 ex) 1111 ^ 0110 -> 1001
        System.out.println(result3); // 각 자릿수마다 겹치는 부분이 없어서 2진수 1111인 15 출력

        int num = 10;
        int result4 = ~num; //각 자릿수를 다 뒤집음 ex) 00001001 -> 11110110
        System.out.println(result4); //부호비트가 1로 바뀌여서 음수가 되고, 2진수 11110101은 10진수로 바꾸면 11이 되서 -11이 출력됨

        int num3 = 5; // 2진수 00000101
        num3 = num3 << 2; // 2진수 00000101을 왼쪽으로 2만큼 이동 --> 00010100(뒷부분은 0으로 채워짐)
        System.out.println(num3); // 2진수 00010100을 10진수로 출력
        //왼쪽으로 n비트 이동한다는건 기존 값에 2ⁿ만큼 곱하겠다는 뜻임. 왼쪽으로 두칸은 2²여서 5*2²=20

        int num4 = 10; //2진수 00001010
        num4 = num4 >> 2; //2진수 00001010을 오른쪽으로 2만큼 이동 --> 00000010(앞부분은 기존에 있던 부호비트로 채워짐)
        System.out.println(num4); //2진수 00000010을 10진수로 출력
        //오른쪽으로 n비트 이동한다는건 기존 값에 2ⁿ만큼 나누겠다는 뜻임. 왼쪽으로 두칸은 2²여서 10/2²=2

        int num5 = 10; //2진수 00001010
        num5 = num5 >>> 2; //2진수 00001010을 오른쪽으로 2만큼 이동 --> 00000010(앞부분은 무조건 0으로 채워짐)
        System.out.println(num5); //2진수 00000010을 10진수로 출력
    }
}

/*연산자 우선순위
1. 단항 연산자가 가장 높고( ++, !, --) 이항, 삼항 연산자 순서임.
2. 대입 연산자( =, +=, /=)가 가장 낮음.
3. 산술, 관계, 논리, 대입 순서임.
 */